{"version":3,"sources":["../../../src/raster/models/raste-tile.ts"],"names":["createLayerContainer","BaseModel","ImageLayer","LineLayer","PointLayer","RasterTileModel","tilesetManager","rasteTileLayer","layer","tiles","filter","tile","isLoaded","map","creatSubLayer","addChild","updateLayerConfig","visible","isVisible","showGrid","hasChild","subGridLayer","subTextLayer","layerService","renderLayers","emit","currentTiles","source","getSource","tileset","initedTileset","bindTilesetEvent","getCurrentView","latLonBounds","zoom","update","renderSubGridLayer","buildModels","features","bboxPolygon","data","type","setData","autoFit","size","color","shape","style","lineType","dashArray","opacity","strokeWidth","stroke","setContainer","sceneContainer","init","on","destroySubLayer","error","renderSubLayers","mapService","e","version","getLayerConfig","updateLayerRenderList","lastViewStates","toString","timer","clearTimeout","setTimeout","zIndex","parser","extent","bounds","container","layerGroup","removeChild","getBounds","getZoom"],"mappings":"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","sourcesContent":["import {\n  createLayerContainer,\n  ILayer,\n  ILayerGroup,\n  IModelUniform,\n} from '@antv/l7-core';\nimport { Tile, TilesetManager } from '@antv/l7-utils';\nimport { Container } from 'inversify';\nimport BaseModel from '../../core/BaseModel';\nimport { IRasterTileLayerStyleOptions } from '../../core/interface';\nimport ImageLayer from '../../image';\nimport LineLayer from '../../line';\nimport PointLayer from '../../point';\n\nexport default class RasterTileModel extends BaseModel {\n  // 瓦片是否加载成功\n  public initedTileset = false;\n  // 瓦片数据管理器\n  public tilesetManager: TilesetManager | undefined;\n  // 是否开启瓦片网格子图层，用于调试\n  public showGrid = false;\n  // 瓦片网格子图层，用于调试\n  private subGridLayer: ILayer;\n  // 瓦片网格文本子图层，用于调试\n  private subTextLayer: ILayer;\n  // 上一次视野状态\n  private lastViewStates: {\n    zoom: number;\n    latLonBounds: [number, number, number, number];\n  };\n  private timer: any;\n\n  public getUninforms(): IModelUniform {\n    return {};\n  }\n\n  public initModels() {\n    const source = this.layer.getSource();\n    this.tilesetManager = source.tileset;\n\n    if (!this.initedTileset) {\n      this.bindTilesetEvent();\n      this.initedTileset = true;\n    }\n\n    const { latLonBounds, zoom } = this.getCurrentView();\n    this.tilesetManager?.update(zoom, latLonBounds);\n\n    if (this.showGrid) {\n      this.renderSubGridLayer();\n    }\n\n    return this.buildModels();\n  }\n\n  public buildModels() {\n    return [];\n  }\n\n  public clearModels() {\n    //\n  }\n\n  // 渲染瓦片网格图层方便调试\n  public renderSubGridLayer() {\n    if (!this.tilesetManager) {\n      return;\n    }\n\n    const features = this.tilesetManager.currentTiles.map(\n      (tile) => tile.bboxPolygon,\n    );\n\n    const data = { type: 'FeatureCollection', features };\n\n    if (this.subGridLayer) {\n      this.subGridLayer.setData(data);\n      this.subTextLayer.setData(data);\n      return;\n    }\n\n    this.subGridLayer = new LineLayer({ autoFit: false })\n      .source(data)\n      .size(1)\n      .color('red')\n      .shape('simple')\n      .style({ lineType: 'dash', dashArray: [1, 2] });\n\n    this.subTextLayer = new PointLayer({ autoFit: false })\n      .source(data)\n      .size(14)\n      .color('red')\n      .shape('meta', 'text')\n      .style({\n        opacity: 1,\n        strokeWidth: 1,\n        stroke: '#fff',\n      });\n\n    this.subGridLayer.setContainer(\n      createLayerContainer(this.layer.sceneContainer as Container),\n      this.layer.sceneContainer as Container,\n    );\n    this.subTextLayer.setContainer(\n      createLayerContainer(this.layer.sceneContainer as Container),\n      this.layer.sceneContainer as Container,\n    );\n    this.subGridLayer.init();\n    this.subTextLayer.init();\n  }\n\n  protected registerBuiltinAttributes() {\n    //\n  }\n\n  // 监听瓦片管理器\n  private bindTilesetEvent() {\n    if (!this.tilesetManager) {\n      return;\n    }\n    // 瓦片数据加载成功\n    this.tilesetManager.on('tile-loaded', (tile: Tile) => {\n      // todo: 将事件抛出，图层上可以监听使用\n    });\n\n    // 瓦片数据从缓存删除或被执行重新加载\n    this.tilesetManager.on('tile-unload', (tile: Tile) => {\n      // todo: 将事件抛出，图层上可以监听使用\n      this.destroySubLayer(tile);\n    });\n\n    // 瓦片数据加载失败\n    this.tilesetManager.on('tile-error', (error, tile: Tile) => {\n      // todo: 将事件抛出，图层上可以监听使用\n    });\n\n    // 瓦片显隐状态更新\n    this.tilesetManager.on('tile-update', this.renderSubLayers);\n\n    // 地图视野发生改变\n    this.mapService.on('mapchange', (e) => {\n      const { latLonBounds, zoom } = this.getCurrentView();\n\n      if (this.mapService.version === 'GAODE1.x') {\n        const { visible } = this.layer.getLayerConfig();\n        if (zoom < 3 && visible) {\n          this.layer.updateLayerConfig({ visible: false });\n          this.layerService.updateLayerRenderList();\n        } else if (zoom >= 3 && !visible) {\n          this.layer.updateLayerConfig({ visible: true });\n          this.layerService.updateLayerRenderList();\n        }\n      }\n\n      if (\n        this.lastViewStates &&\n        this.lastViewStates.zoom === zoom &&\n        this.lastViewStates.latLonBounds.toString() === latLonBounds.toString()\n      ) {\n        return;\n      }\n      this.lastViewStates = { zoom, latLonBounds };\n\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n\n      this.timer = setTimeout(() => {\n        this.tilesetManager?.update(zoom, latLonBounds);\n        if (this.showGrid) {\n          this.renderSubGridLayer();\n        }\n      }, 250);\n    });\n  }\n\n  // 创建子图层\n  private creatSubLayer(tile: Tile) {\n    const {\n      opacity = 1,\n      zIndex = 0,\n    } = this.layer.getLayerConfig() as IRasterTileLayerStyleOptions;\n    const layer = new ImageLayer({\n      visible: tile.isVisible,\n      zIndex,\n    })\n      .source(tile.data, {\n        parser: {\n          type: 'image',\n          extent: tile.bounds,\n        },\n      })\n      .style({\n        opacity,\n      });\n    const container = createLayerContainer(\n      this.layer.sceneContainer as Container,\n    );\n    layer.setContainer(container, this.layer.sceneContainer as Container);\n    layer.init();\n\n    return layer;\n  }\n\n  // 更新子图层\n  private renderSubLayers = () => {\n    if (!this.tilesetManager) {\n      return;\n    }\n\n    const rasteTileLayer = this.layer as ILayerGroup;\n\n    this.tilesetManager.tiles\n      .filter((tile) => tile.isLoaded)\n      .map((tile) => {\n        if (!tile.layer) {\n          tile.layer = this.creatSubLayer(tile);\n          rasteTileLayer.addChild(tile.layer);\n        } else {\n          // 显隐藏控制\n          tile.layer.updateLayerConfig({\n            visible: tile.isVisible,\n          });\n        }\n        return tile.layer;\n      });\n\n    if (this.showGrid) {\n      if (!rasteTileLayer.hasChild(this.subGridLayer)) {\n        rasteTileLayer.addChild(this.subGridLayer);\n      }\n      if (!rasteTileLayer.hasChild(this.subTextLayer)) {\n        rasteTileLayer.addChild(this.subTextLayer);\n      }\n    }\n\n    this.layerService.renderLayers();\n\n    if (this.tilesetManager.isLoaded) {\n      // 将事件抛出，图层上可以使用瓦片\n      rasteTileLayer.emit('tiles-loaded', this.tilesetManager.currentTiles);\n    }\n  };\n\n  // 摧毁子图层\n  private destroySubLayer(tile: Tile) {\n    if (tile.layer) {\n      const layerGroup = this.layer as ILayerGroup;\n      layerGroup.removeChild(tile.layer);\n    }\n  }\n\n  // 获取当前视野参数\n  private getCurrentView() {\n    const bounds = this.mapService.getBounds();\n    const latLonBounds: [number, number, number, number] = [\n      bounds[0][0],\n      bounds[0][1],\n      bounds[1][0],\n      bounds[1][1],\n    ];\n    const zoom = this.mapService.getZoom();\n\n    return { latLonBounds, zoom };\n  }\n}\n"],"file":"raste-tile.js"}