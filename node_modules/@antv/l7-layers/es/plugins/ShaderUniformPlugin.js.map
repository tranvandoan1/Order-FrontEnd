{"version":3,"sources":["../../src/plugins/ShaderUniformPlugin.ts"],"names":["CameraUniform","CoordinateUniform","TYPES","$window","inject","injectable","ShaderUniformPlugin","ICameraService","ICoordinateSystemService","IRendererService","IMapService","layer","version","mapService","mvp","sceneCenterMKT","hooks","beforeRender","tap","coordinateSystemService","refresh","layerCenter","getLayerCenter","map","customCoords","setCenter","setCustomCoordCenter","getMVPMatrix","getCustomCoordCenter","rendererService","getViewportSize","width","height","models","forEach","model","addUniforms","ProjectionMatrix","cameraService","getProjectionMatrix","ViewMatrix","getViewMatrix","ViewProjectionMatrix","getViewProjectionMatrix","Zoom","getZoom","ZoomScale","getZoomScale","FocalDistance","getFocalDistance","CameraPosition","getCameraPosition","CoordinateSystem","getCoordinateSystem","ViewportCenter","getViewportCenter","ViewportCenterProjection","getViewportCenterProjection","PixelsPerDegree","getPixelsPerDegree","PixelsPerDegree2","getPixelsPerDegree2","PixelsPerMeter","getPixelsPerMeter","Mvp","getModelMatrix","devicePixelRatio","getLayerConfig","pickingBuffer","Number","getShaderPickStat","source","getSource","center"],"mappings":"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","sourcesContent":["import {\n  CameraUniform,\n  CoordinateUniform,\n  ICameraService,\n  ICoordinateSystemService,\n  ILayer,\n  ILayerPlugin,\n  IMapService,\n  IRendererService,\n  TYPES,\n} from '@antv/l7-core';\nimport { $window } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\n\n/**\n * 在渲染之前需要获取当前 Shader 所需 Uniform，例如：\n * 1. 从相机服务中获取 View & ProjectionMatrix，当前缩放等级等等\n * 2. 从坐标系服务中获取当前坐标系，例如是否是偏移坐标系\n *    @see https://yuque.antfin-inc.com/yuqi.pyq/fgetpa/doml91\n * 3. 当前 Layer 本身的样式属性\n */\n@injectable()\nexport default class ShaderUniformPlugin implements ILayerPlugin {\n  @inject(TYPES.ICameraService)\n  private readonly cameraService: ICameraService;\n\n  @inject(TYPES.ICoordinateSystemService)\n  private readonly coordinateSystemService: ICoordinateSystemService;\n\n  @inject(TYPES.IRendererService)\n  private readonly rendererService: IRendererService;\n\n  @inject(TYPES.IMapService)\n  private readonly mapService: IMapService;\n\n  public apply(layer: ILayer) {\n    const version = this.mapService.version;\n\n    let mvp = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; // default matrix (for gaode2.x)\n    let sceneCenterMKT = [0, 0];\n    layer.hooks.beforeRender.tap('ShaderUniformPlugin', () => {\n      // 重新计算坐标系参数\n      this.coordinateSystemService.refresh();\n\n      if (version === 'GAODE2.x') {\n        const layerCenter = this.getLayerCenter(layer);\n        // @ts-ignore\n        this.mapService.map.customCoords.setCenter(layerCenter);\n        // @ts-ignore\n        this.mapService.setCustomCoordCenter(layerCenter);\n        // @ts-ignore\n        mvp = this.mapService.map.customCoords.getMVPMatrix();\n        // mvp = amapCustomCoords.getMVPMatrix()\n        // @ts-ignore\n        sceneCenterMKT = this.mapService.getCustomCoordCenter();\n      }\n\n      const { width, height } = this.rendererService.getViewportSize();\n      layer.models.forEach((model) => {\n        model.addUniforms({\n          // 相机参数，包含 VP 矩阵、缩放等级\n          [CameraUniform.ProjectionMatrix]: this.cameraService.getProjectionMatrix(),\n          [CameraUniform.ViewMatrix]: this.cameraService.getViewMatrix(),\n          [CameraUniform.ViewProjectionMatrix]: this.cameraService.getViewProjectionMatrix(),\n          [CameraUniform.Zoom]: this.cameraService.getZoom(),\n          [CameraUniform.ZoomScale]: this.cameraService.getZoomScale(),\n          [CameraUniform.FocalDistance]: this.cameraService.getFocalDistance(),\n          [CameraUniform.CameraPosition]: this.cameraService.getCameraPosition(),\n          // 坐标系参数\n          [CoordinateUniform.CoordinateSystem]: this.coordinateSystemService.getCoordinateSystem(),\n          [CoordinateUniform.ViewportCenter]: this.coordinateSystemService.getViewportCenter(),\n          [CoordinateUniform.ViewportCenterProjection]: this.coordinateSystemService.getViewportCenterProjection(),\n          [CoordinateUniform.PixelsPerDegree]: this.coordinateSystemService.getPixelsPerDegree(),\n          [CoordinateUniform.PixelsPerDegree2]: this.coordinateSystemService.getPixelsPerDegree2(),\n          [CoordinateUniform.PixelsPerMeter]: this.coordinateSystemService.getPixelsPerMeter(),\n          // 坐标系是高德2.0的时候单独计算\n          [CoordinateUniform.Mvp]: mvp,\n          u_SceneCenterMKT: sceneCenterMKT,\n          // 其他参数，例如视口大小、DPR 等\n          u_ViewportSize: [width, height],\n          u_ModelMatrix: this.cameraService.getModelMatrix(),\n          u_DevicePixelRatio: $window.devicePixelRatio,\n          // u_ModelMatrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n          u_PickingBuffer: layer.getLayerConfig().pickingBuffer || 0,\n          // TODO: 当前地图是否在拖动\n          u_shaderPick: Number(layer.getShaderPickStat()),\n        });\n      });\n\n      // TODO：脏检查，决定是否需要渲染\n    });\n  }\n\n  private getLayerCenter(layer: ILayer) {\n    const source = layer.getSource();\n    return source.center;\n  }\n}\n"],"file":"ShaderUniformPlugin.js"}