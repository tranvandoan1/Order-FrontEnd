{"version":3,"sources":["../../src/utils/layerData.ts"],"names":["Version","Source","isColor","normalize","rgb2arr","getArrowPoints","p1","p2","dir","normalizeDir","arrowPoint","adjustData2Amap2Coordinates","mappedData","mapService","length","version","coordinates","filter","d","originCoordinates","map","cloneDeep","lngLatToCoord","lngLatToCoords","adjustData2SimpleCoordinates","SIMPLE","simpleCoordinate","unProjectCoordinates","simpleMapCoord","unproject","Array","coords","coord","c1","co","push","applyAttributeMapping","attribute","record","minimumColor","scale","scalers","params","forEach","field","hasOwnProperty","type","mappingResult","mapping","name","attributes","data","fontService","layer","getLayerConfig","arrow","enable","encodeRecord","id","_id","undefined","values","needRemapping","c","isArray","shape","getIconFontKey","splice","calculateData","styleAttributeService","options","source","bottomColor","getBottomColor","getLayerStyleAttributes","dataArray","filterData","mappedEncodeData","destroy"],"mappings":"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","sourcesContent":["import {\n  IEncodeFeature,\n  IFontService,\n  ILayer,\n  IMapService,\n  IParseDataItem,\n  ISourceCFG,\n  IStyleAttribute,\n  IStyleAttributeService,\n  Position,\n} from '@antv/l7-core';\nimport { Version } from '@antv/l7-maps';\nimport Source from '@antv/l7-source';\nimport { isColor, normalize, rgb2arr } from '@antv/l7-utils';\nimport { ILineLayerStyleOptions } from '../core/interface';\n\nfunction getArrowPoints(p1: Position, p2: Position) {\n  const dir = [p2[0] - p1[0], p2[1] - p1[1]];\n  const normalizeDir = normalize(dir);\n  const arrowPoint = [\n    p1[0] + normalizeDir[0] * 0.0001,\n    p1[1] + normalizeDir[1] * 0.0001,\n  ];\n  return arrowPoint;\n}\n\nfunction adjustData2Amap2Coordinates(\n  mappedData: IEncodeFeature[],\n  mapService: IMapService,\n) {\n  // 根据地图的类型判断是否需要对点位数据进行处理, 若是高德2.0则需要对坐标进行相对偏移\n  if (mappedData.length > 0 && mapService.version === Version['GAODE2.x']) {\n    if (typeof mappedData[0].coordinates[0] === 'number') {\n      // 单个的点数据\n      // @ts-ignore\n      mappedData\n        // TODO: 避免经纬度被重复计算导致坐标位置偏移\n        .filter((d) => !d.originCoordinates)\n        .map((d) => {\n          d.version = Version['GAODE2.x'];\n          // @ts-ignore\n          d.originCoordinates = cloneDeep(d.coordinates); // 为了兼容高德1.x 需要保存一份原始的经纬度坐标数据（许多上层逻辑依赖经纬度数据）\n          // @ts-ignore\n          d.coordinates = this.mapService.lngLatToCoord(d.coordinates);\n        });\n    } else {\n      // 连续的线、面数据\n      // @ts-ignore\n      mappedData\n        // TODO: 避免经纬度被重复计算导致坐标位置偏移\n        .filter((d) => !d.originCoordinates)\n        .map((d) => {\n          d.version = Version['GAODE2.x'];\n          // @ts-ignore\n          d.originCoordinates = cloneDeep(d.coordinates); // 为了兼容高德1.x 需要保存一份原始的经纬度坐标数据（许多上层逻辑依赖经纬度数据）\n          // @ts-ignore\n          d.coordinates = this.mapService.lngLatToCoords(d.coordinates);\n        });\n    }\n  }\n}\n\nfunction adjustData2SimpleCoordinates(\n  mappedData: IEncodeFeature[],\n  mapService: IMapService,\n) {\n  if (mappedData.length > 0 && mapService.version === Version.SIMPLE) {\n    mappedData.map((d) => {\n      if (!d.simpleCoordinate) {\n        d.coordinates = unProjectCoordinates(d.coordinates, mapService);\n        d.simpleCoordinate = true;\n      }\n    });\n  }\n}\n\nfunction unProjectCoordinates(coordinates: any, mapService: IMapService) {\n  if (typeof coordinates[0] === 'number') {\n    return mapService.simpleMapCoord.unproject(coordinates as [number, number]);\n  }\n\n  if (coordinates[0] && coordinates[0][0] instanceof Array) {\n    // @ts-ignore\n    const coords = [];\n    coordinates.map((coord: any) => {\n      // @ts-ignore\n      const c1 = [];\n      coord.map((co: any) => {\n        c1.push(mapService.simpleMapCoord.unproject(co as [number, number]));\n      });\n      // @ts-ignore\n      coords.push(c1);\n    });\n    // @ts-ignore\n    return coords;\n  } else {\n    // @ts-ignore\n    const coords = [];\n    // @ts-ignore\n    coordinates.map((coord) => {\n      coords.push(\n        mapService.simpleMapCoord.unproject(coord as [number, number]),\n      );\n    });\n    // @ts-ignore\n    return coords;\n  }\n}\n\nfunction applyAttributeMapping(\n  attribute: IStyleAttribute,\n  record: { [key: string]: unknown },\n  minimumColor?: string,\n) {\n  if (!attribute.scale) {\n    return [];\n  }\n  const scalers = attribute?.scale?.scalers || [];\n  const params: unknown[] = [];\n\n  scalers.forEach(({ field }) => {\n    if (record.hasOwnProperty(field) || attribute.scale?.type === 'variable') {\n      // TODO:多字段，常量\n      params.push(record[field]);\n    }\n  });\n\n  const mappingResult = attribute.mapping ? attribute.mapping(params) : [];\n  if (attribute.name === 'color' && !isColor(mappingResult[0])) {\n    return [minimumColor];\n  }\n  return mappingResult;\n}\n\nfunction mapping(\n  attributes: IStyleAttribute[],\n  data: IParseDataItem[],\n  fontService: IFontService,\n  mapService: IMapService,\n  minimumColor?: string,\n  layer?: ILayer,\n): IEncodeFeature[] {\n  const {\n    arrow = {\n      enable: false,\n    },\n  } = layer?.getLayerConfig() as ILineLayerStyleOptions;\n  const mappedData = data.map((record: IParseDataItem) => {\n    const encodeRecord: IEncodeFeature = {\n      id: record._id,\n      coordinates: record.coordinates,\n    };\n\n    attributes\n      .filter((attribute) => attribute.scale !== undefined)\n      .forEach((attribute: IStyleAttribute) => {\n        let values = applyAttributeMapping(attribute, record, minimumColor);\n\n        attribute.needRemapping = false;\n\n        // TODO: 支持每个属性配置 postprocess\n        if (attribute.name === 'color') {\n          values = values.map((c: unknown) => {\n            return rgb2arr(c as string);\n          });\n        }\n        // @ts-ignore\n        encodeRecord[attribute.name] =\n          Array.isArray(values) && values.length === 1 ? values[0] : values;\n\n        // 增加对 layer/text/iconfont unicode 映射的解析\n        if (attribute.name === 'shape') {\n          encodeRecord.shape = fontService.getIconFontKey(\n            encodeRecord[attribute.name] as string,\n          );\n        }\n      });\n\n    if (encodeRecord.shape === 'line' && arrow.enable) {\n      // 只有在线图层且支持配置箭头的时候进行插入顶点的处理\n      const coords = encodeRecord.coordinates as Position[];\n      const arrowPoint = getArrowPoints(coords[0], coords[1]);\n      encodeRecord.coordinates.splice(1, 0, arrowPoint, arrowPoint);\n    }\n    return encodeRecord;\n  }) as IEncodeFeature[];\n  // 调整数据兼容 Amap2.0\n  adjustData2Amap2Coordinates(mappedData, mapService);\n\n  // 调整数据兼容 SimpleCoordinates\n  adjustData2SimpleCoordinates(mappedData, mapService);\n\n  return mappedData;\n}\n\nexport function calculateData(\n  layer: ILayer,\n  fontService: IFontService,\n  mapService: IMapService,\n  styleAttributeService: IStyleAttributeService,\n  data: any,\n  options: ISourceCFG | undefined,\n): IEncodeFeature[] {\n  const source = new Source(data, options);\n  const bottomColor = layer.getBottomColor();\n  const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n  const { dataArray } = source.data;\n  const filterData = dataArray;\n\n  const mappedEncodeData = mapping(\n    attributes,\n    filterData,\n    fontService,\n    mapService,\n    bottomColor,\n    layer,\n  );\n  source.destroy();\n  return mappedEncodeData;\n}\n"],"file":"layerData.js"}